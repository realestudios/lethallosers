## Settings file was created by plugin Scarlet Mansion v1.3.7
## Plugin GUID: ImoutoSama.ScarletMansion

[_Presets]

## Automatically updates config values based on this preset string. If you want to disable this, change this value to "Custom".
## Possible values are ("Custom", "Default", "Small", "MoreLoot", "BitMoreLoot", "Vanilla").
## Please use the mod LethalConfig for more information on these presets.
# Setting type: DungeonGeneration
# Default value: Default
# Acceptable values: Custom, Default, Small, MoreLoot, BitMoreLoot, Vanilla
Preset Dungeon Generation = Default

## Automatically updates config values based on this preset string. If you want to disable this, change this value to "Custom".
## Possible values are ("Custom", "Default", "Bright", "Dark").
## Please use the mod LethalConfig for more information on these presets.
# Setting type: DungeonLighting
# Default value: Default
# Acceptable values: Custom, Default, Bright, Dark
Preset Dungeon Lighting = Default

[DunGen Bounding Box]

## The width (left-to-right) of the dungeon's bounding box.
## The dungeon is generated within this bounding box and cannot generate tiles outside of it.
## Increasing this value will make the dungeon less compact but less likely to fail generation and vice versa.
## Decreasing this value too much can make it impossible for the dungeon to generate.
# Setting type: Int32
# Default value: 120
# Acceptable value range: From 40 to 200
Width Base = 120

## The length (forward-to-back) of the dungeon's bounding box.
## The dungeon is generated within this bounding box and cannot generate tiles outside of it.
## Increasing this value will make the dungeon less compact but less likely to fail generation and vice versa.
## Decreasing this value too much can make it impossible for the dungeon to generate.
# Setting type: Int32
# Default value: 80
# Acceptable value range: From 40 to 200
Length Base = 80

## The width (left-to-right) of the dungeon's bounding box increases based on the dungeon's size. That additional width is multiplied by this value.
## The exact formula is width = base + (base * (size - 1) * factor).
## Increasing this value will make the dungeon less compact but less likely to fail generation on bigger moons.
## Setting this value to 0 means that the base width will be a constant value no matter how small or big the moon may be.
# Setting type: Single
# Default value: 0.5
# Acceptable value range: From 0 to 4
Width Multiplier Factor = 0.5

## The length (forward-to-back) of the dungeon's bounding box increases based on the dungeon's size. That additional length is multiplied by this value.
## The exact formula is length = base + (base * (size - 1) * factor).
## Increasing this value will make the dungeon less compact but less likely to fail generation on bigger moons.
## Setting this value to 0 means that the base length will be a constant value no matter how small or big the moon may be.
# Setting type: Single
# Default value: 0.3333333
# Acceptable value range: From 0 to 4
Length Multiplier Factor = 0.3333333

[DunGen Branching Path 1]

## The minimum amount of branching paths in Section 1 of the dungeon generation process.
## Section 1 consists of the first 30% tiles of the main path (including the mayor entrance tile).
## 
## Each tile on the main path will try to generate a number of branching paths equal to this number. This is not an enforced number and the dungeon generation will proceed if it can't fit any tiles.
# Setting type: Int32
# Default value: 6
# Acceptable value range: From 0 to 20
Section 1 Count Min = 6

## The maximum amount of branching paths in Section 1 of the dungeon generation process.
## Section 1 consists of the first 30% tiles of the main path (including the mayor entrance tile).
## 
## Each tile on the main path will try to generate a number of branching paths equal to this number. This is not an enforced number and the dungeon generation will proceed if it can't fit any tiles.
# Setting type: Int32
# Default value: 8
# Acceptable value range: From 0 to 20
Section 1 Count Max = 8

## The minimum length of the branching paths in Section 1 of the dungeon generation process.
## Section 1 consists of the first 30% tiles of the main path (including the mayor entrance tile).
## 
## Each branching path will try to generate a number of connecting tiles equal to this number. This is not an enforced number and the dungeon generation will proceed if it can't fit any tiles.
# Setting type: Int32
# Default value: 3
# Acceptable value range: From 0 to 20
Section 1 Depth Min = 3

## The maximum length of the branching paths in Section 1 of the dungeon generation process.
## Section 1 consists of the first 30% tiles of the main path (including the mayor entrance tile).
## 
## Each branching path will try to generate a number of connecting tiles equal to this number. This is not an enforced number and the dungeon generation will proceed if it can't fit any tiles.
# Setting type: Int32
# Default value: 4
# Acceptable value range: From 0 to 20
Section 1 Depth Max = 4

[DunGen Branching Path 2]

## The minimum amount of branching paths in Section 2 of the dungeon generation process.
## Section 2 consists of the middle tiles (30% - 70%) of the main path.
## 
## Each tile on the main path will try to generate a number of branching paths equal to this number. This is not an enforced number and the dungeon generation will proceed if it can't fit any tiles.
# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 20
Section 2 Count Min = 2

## The maximum amount of branching paths in Section 2 of the dungeon generation process.
## Section 2 consists of the middle tiles (30% - 70%) of the main path.
## 
## Each tile on the main path will try to generate a number of branching paths equal to this number. This is not an enforced number and the dungeon generation will proceed if it can't fit any tiles.
# Setting type: Int32
# Default value: 3
# Acceptable value range: From 0 to 20
Section 2 Count Max = 3

## The minimum length of the branching paths in Section 2 of the dungeon generation process.
## Section 2 consists of the middle tiles (30% - 70%) of the main path.
## 
## Each branching path will try to generate a number of connecting tiles equal to this number. This is not an enforced number and the dungeon generation will proceed if it can't fit any tiles.
# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 20
Section 2 Depth Min = 1

## The maximum length of the branching paths in Section 2 of the dungeon generation process.
## Section 2 consists of the middle tiles (30% - 70%) of the main path.
## 
## Each branching path will try to generate a number of connecting tiles equal to this number. This is not an enforced number and the dungeon generation will proceed if it can't fit any tiles.
# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 20
Section 2 Depth Max = 2

[DunGen Branching Path 3]

## The minimum amount of branching paths in Section 3 of the dungeon generation process.
## Section 3 consists of the last 30% tiles of the main path.
## 
## Each tile on the main path will try to generate a number of branching paths equal to this number. This is not an enforced number and the dungeon generation will proceed if it can't fit any tiles.
# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 20
Section 3 Count Min = 1

## The maximum amount of branching paths in Section 3 of the dungeon generation process.
## Section 3 consists of the last 30% tiles of the main path.
## 
## Each tile on the main path will try to generate a number of branching paths equal to this number. This is not an enforced number and the dungeon generation will proceed if it can't fit any tiles.
# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 20
Section 3 Count Max = 2

## The minimum length of the branching paths in Section 3 of the dungeon generation process.
## Section 3 consists of the last 30% tiles of the main path.
## 
## Each branching path will try to generate a number of connecting tiles equal to this number. This is not an enforced number and the dungeon generation will proceed if it can't fit any tiles.
# Setting type: Int32
# Default value: 0
# Acceptable value range: From 0 to 20
Section 3 Depth Min = 0

## The maximum length of the branching paths in Section 3 of the dungeon generation process.
## Section 3 consists of the last 30% tiles of the main path.
## 
## Each branching path will try to generate a number of connecting tiles equal to this number. This is not an enforced number and the dungeon generation will proceed if it can't fit any tiles.
# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 20
Section 3 Depth Max = 1

[DunGen Main Path]

## The amount of main paths that the modified dungeon generation code must generate.
## Decreasing this value will make it much less likely to fail generation but will lower the length consistency of branching paths.
## Setting the value to 1 will revert back to the vanilla dungeon generation.
# Setting type: Int32
# Default value: 3
# Acceptable value range: From 1 to 3
Main Path Count = 3

## The minimum allowed length of the main path. This value is multiplied by the dungeon's size.
## 
## Decreasing this value will make the dungeon less likely to fail generation but will lower the length consistency of branching paths and vice versa.
## Increasing this value too much can make it impossible for the dungeon to generate.
# Setting type: Int32
# Default value: 4
# Acceptable value range: From 2 to 20
Main Path Length Min = 4

## The maximum allowed length of the main path. This value is multiplied by the dungeon's size.
## 
## Decreasing this value will make the dungeon less likely to fail generation but will lower the length consistency of branching paths and vice versa.
## Increasing this value too much can make it impossible for the dungeon to generate.
# Setting type: Int32
# Default value: 5
# Acceptable value range: From 2 to 20
Main Path Length Max = 5

[Dungeon Features]

## The amount of damage done by swinging your shovel at a SDM door. Door health equals to 100.
# Setting type: Int32
# Default value: 45
# Acceptable value range: From 0 to 100
Door Shovel Damage = 45

## The amount of damage done by shotgun blasting at a SDM door. Door health equals to 100.
# Setting type: Int32
# Default value: 100
# Acceptable value range: From 0 to 100
Door Shotgun Damage = 100

## The damage multiplier applied to an enemy's attacks against a locked SDM door.
## Setting the value to 0 means that enemies can't break through a locked SDM door like in vanilla.
# Setting type: Single
# Default value: 0.5
# Acceptable value range: From 0 to 1
Locked Door Enemy Damage Multiplier = 0.5

## If enabled, the dungeon will spawn its custom fire exits. If disabled, the dungeon will instead spawn the vanilla fire exits.
# Setting type: Boolean
# Default value: true
Use SDM Fire Exits = true

[Dungeon Generation]

## The minimum allowed size of the dungeon.
## Each moon modifies the size of their dungeon starting from 1 (Experimentation) to 2.35 (Titan).
## Please check the wiki for the list of map size multipliers for every moon.
# Setting type: Single
# Default value: 1
# Acceptable value range: From 1 to 10
Size Multiplier Min = 1

## The maximum allowed size of the dungeon.
## Each moon modifies the size of their dungeon starting from 1 (Experimentation) to 2.35 (Titan).
## Please check the wiki for the list of map size multipliers for every moon.
# Setting type: Single
# Default value: 2
# Acceptable value range: From 1 to 10
Size Multiplier Max = 2

[Dungeon Loot And Enemies]

## Multiplies the total amount of loot for the dungeon.
# Setting type: Single
# Default value: 1.4
# Acceptable value range: From 0.25 to 4
Loot Multiplier = 1.4

## Multiplies the total amount of map hazards (landmines, turrets) for the dungeon.
# Setting type: Single
# Default value: 1.6
# Acceptable value range: From 0.25 to 4
Map Hazards Multiplier = 1.6

## Increases the minimum amount of indoor enemies that spawn with each spawn wave. For reference, Eclipse is +3.
# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 3
Minimum Indoor Enemy Spawn Count = 1

## The decorative crystal's spawn weight. Calculating spawn chance (%) is difficult as the total scrap weight for each moon varies from ~600 to ~850.
# Setting type: Int32
# Default value: 60
# Acceptable value range: From 0 to 999
Decorative Crystal Weight = 60

## The percentage of spawn weight that the knight steals from the coil-head for that moon.
## Setting this 0 means that the coil-head's weight is unaffected and the knight's weight is based entirely by Knight Weight Base.
## Setting this 1 means the knight effectively replaces the coil-head.
## If the moon doesn't spawn the coil-head, the knight's base weight is set to 10.
# Setting type: Single
# Default value: 0.75
# Acceptable value range: From 0 to 1
Knight Weight Steal Percentage = 0.75

## The base spawn weight of the knight. This is added onto the spawn weight stolen from the coil-head, or the base weight of 10 if the moon doesn't spawn the coil-head.
# Setting type: Int32
# Default value: 0
# Acceptable value range: From 0 to 999
Knight Weight Base = 0

[Dungeon Painting Event]

## The scrap value of demonic paintings.
# Setting type: Int32
# Default value: 100
# Acceptable value range: From 0 to 200
Painting Value = 100

## The maximum amount of demonic paintings that spawn in the dungeon.
# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 10
Painting Count = 2

## The minimum allowed amount of extra loot that spawns after grabbing the demonic painting.
# Setting type: Int32
# Default value: 0
# Acceptable value range: From 0 to 3
Painting Extra Loot Min = 0

## The maximum allowed amount of extra loot that spawns after grabbing the demonic painting.
# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 3
Painting Extra Loot Max = 2

## If enabled, an enemy will spawn when the bedroom's painting event ends.
# Setting type: Boolean
# Default value: true
Spawn Enemy = true

## The enemies that can spawn when the bedroom's painting event ends, in the form of a comma separated list of enemy names along with optional parameters separated or '@'.It can accept either the enemy's internal or display name.
## 
## The available parameters are:
## Spawn Logic: 's#' where '#' is either '0' for normal spawn logic or '1' for special spawn logic. Only the knight and jester have special spawn logic. When their special spawn logic is enabled, the knight will spawn properly in the bedroom and the jester will spawn already cranking.
## 
## The following string "default" is a preset that uses the following string "knight@s1,crawler,nutcracker,springman,maskedplayerenemy,jester@s1".
# Setting type: String
# Default value: default
Enemy List = default

## If enabled, facility meltdown will activate when the bedroom's painting event ends. Requires FacilityMeltdown v2.4.7 or higher.
# Setting type: Boolean
# Default value: false
Activate Facility Meltdown = false

[Dungeon Weight]

## The weight of the dungeon appearing for dine/rend. A higher weight means a higher chance.
## 100 = 25% chance, 300 = 50% chance, 900 = 75%, 99999 = 99.99% chance
# Setting type: Int32
# Default value: 300
# Acceptable value range: From 0 to 99999
SDM Rend/Dine Weight = 0

## The weight of the dungeon appearing for titan. A higher weight means a higher chance.
## 69 = 16% chance, 150 = 29%, 400 = 52% chance, 99999 = 99.99% chance
# Setting type: Int32
# Default value: 69
# Acceptable value range: From 0 to 99999
SDM Titan Weight = 0

## The moon(s) that SDM can spawn on, in the form of a comma separated list of selectable level names and optionally a weight value by using an '@' and weight value after it (e.g. "Titan@300,Dine,Rend@10,CUSTOM_MOON_NAME@9999")
## Using this config WILL override the default weights used above.
## The name matching is lenient and should pick it up if you use the terminal name or internal mod name. If no rarity is specified, the default weight below is used.
## The following strings: "all", "vanilla", "modded", "paid", "free" are dynamic presets which add the dungeon to that specified group (string must only contain one of these, or a manual moon name list).
## 
# Setting type: String
# Default value: 
Custom Moons = Orion@300,Solace@900

## The default weight of the dungeon appearing for custom moons. A higher weight means a higher chance.
## 300 = 50% chance, 99999 = 99.99% chance
# Setting type: Int32
# Default value: 300
# Acceptable value range: From 0 to 99999
Custom Moons Weight = 0

[Lighting]

## The weight for a hallway wall lamp to appear on its respective walls. With the default weight of 225 against the weight of the empty wall of 75, there is a 60% chance that a wall lamp will spawn. Increasing the weight to 675 will give you a 90% chance, 75 = 50%, and so on.
# Setting type: Int32
# Default value: 225
# Acceptable value range: From 0 to 999
Hallway Lights Weight = 225

## The weight for a chandelier to appear on its respective ceilings. With the default weight of 225 against the weight of the empty ceiling of 75, there is a 75% chance that a chandelier will spawn. Increasing the weight to 675 will give you a 90%, 75 = 50%, and so on.
# Setting type: Int32
# Default value: 225
# Acceptable value range: From 0 to 999
Chandelier Lights Weight = 225

## The weight that none of the spawned light sources (desk lamps, wall lamps, chandeliers) in a given tile will emit light. With the default weight spread of [2, 7, 1], there is a 20% chance that even in a room filled with lamps, none of them will emit light.
# Setting type: Int32
# Default value: 2
# Acceptable value range: From 0 to 99
0 Lights Weight = 2

## The weight that only 1 of the spawned light sources (desk lamps, wall lamps, chandeliers) in a given tile will emit light. With the default weight spread of [2, 7, 1], there is a 70% chance that even in a room filled with lamps, only one of them will emit light.
# Setting type: Int32
# Default value: 7
# Acceptable value range: From 0 to 99
1 Light Weight = 7

## The weight that only 2 of the spawned light sources (desk lamps, wall lamps, chandeliers) in a given tile will emit light. With the default weight spread of [2, 7, 1], there is a 10% chance that even in a room filled with lamps, only two of them will emit light.
# Setting type: Int32
# Default value: 1
# Acceptable value range: From 0 to 99
2 Lights Weight = 1

